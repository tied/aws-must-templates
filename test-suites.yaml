# test-suites.yaml defining test suites for aws-must-templates
# 
# Defines an array of test suite definitions with attributes
# - desc: one liner summarizing the test suite
# - roles: (optional) an array of test specs in the directory `spec`
# - instance (optional): an array of EC2 instance test specifications, which should be tested
# 
# EC2 instance test specificiation:
# - roles: an array of test spect in the directory `spec`, which the EC2 instance should pass
#
# 

- smoke:
   desc: Fails fast if problems with AWS installation
   long_desc: |

          Creates a S3 bucket, and no EC2 instances. 
  
   roles:
     - Stack
     - ParameterTest:
          param1: value1
          param2: "@Parameters.DummyParameter"
          param3: "@Outputs.Bucket"

- suite1:
   desc: EC2 instance with S3 read access
   long_desc: |

         Creates an S3 bucket and two EC2 instances (myInstance, myInstance2)
         One of the instances (myInstance) is granted Read Access Rights to the Bucket.
  
         To grant Access Rights 

         * create a Role
         * create Policy referencing the Role
         * create an InstanceProfile referencing the Role
         * associate the InstanceProfile to the EC2 instance to grant Read Access

         Creates SecurityGroup to act as a virtual firewall, and to allow ssh
         connection to the EC2 instance.

         EC2 installation uses UserData script to install
         
         * AWS Command Line Interface
         * CloudFormation Helper Scripts. These scripts are used to create
           notification when installation is finished
         

   roles:
     - Stack
   instances:
     - myInstance:
         roles:
           - AwsCommandLineInterfaceInstalled:
           - CloudFormationHelperScriptsInstalled
           - S3ReadAccessAllowed:
                Bucket: "@Outputs.Bucket"

     - myInstance2:
         roles:
          - ParameterTest:
              param1: value1
              param2: "value2"
              param3: "@Outputs.Bucket"
          - Stack
          - AwsCommandLineInterfaceInstalled
          - CloudFormationHelperScriptsInstalled
          - S3NoAccess:
              Bucket: "@Outputs.Bucket"
